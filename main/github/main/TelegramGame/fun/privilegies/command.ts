import { Context, Markup, Telegraf } from "telegraf";
import { ParseUserStateToDatabase, TelegramGameMenu } from "../..";
import { ParsePrivilegiesCommand } from "./dashboard";
export const TelegramFunCommandPrivilegies = (bot: Telegraf) => {
  bot.action("p_givebalance", async (ctx) => {
    const user = await ParseUserStateToDatabase(ctx);
    return ctx.reply(`${user.username}, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–∞—Ç—å? –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ`,
      Markup.inlineKeyboard([
        [Markup.button.callback("100 üí∞", "p_givebalance_100"),
        Markup.button.callback("1.000 üí∞", "p_givebalance_1000"),
        Markup.button.callback("10.000 üí∞", "p_givebalance_10000"),
        Markup.button.callback("100.000 üí∞", "p_givebalance_100000"),],
        TelegramGameMenu
      ])
    );
  });
}
export const TelegramGiveBalance = (bot: Telegraf) => {
  bot.action("p_givebalance_\d+", async (ctx) => {
    const user = await ParseUserStateToDatabase(ctx);
    const balance = ctx.match[1];
    const keyboard = []
    return ctx.reply(`${user.username}, –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–∞—Ç—å ${balance} üí∞? –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ`,
      Markup.inlineKeyboard([
        Markup.button.callback("–î–∞, –¥–∞—Ç—å", "p_givebalance_yes"),
        Markup.button.callback("–ù–µ—Ç, –Ω–µ –¥–∞—Ç—å", "p_givebalance_no"),
      ])
    );
  });
}